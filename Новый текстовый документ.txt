авторизация

 <Grid>
        <Label x:Name="zag_autho" FontSize="20" Content="Авторизация в системе" HorizontalAlignment="Center" Margin="0,88,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="loginTextBox" HorizontalAlignment="Left" Height="35" Margin="86,144,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="156"/>
        <PasswordBox x:Name="passwordTextBox" HorizontalAlignment="Center" Margin="86,200,102,0" VerticalAlignment="Top" Width="156" Height="35"/>
        <Button x:Name="butto_auth" Content="Войти в систему" HorizontalAlignment="Center" Margin="108,278,107,0" VerticalAlignment="Top" Width="110" Height="29" Click="Button_auth_Click"/>
    </Grid>

авториз прогр

 public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void Button_auth_Click(object sender, RoutedEventArgs e)
        {
            if (!String.IsNullOrEmpty(loginTextBox.Text))
            {
                if (!String.IsNullOrEmpty(passwordTextBox.Password))
                {
                    IQueryable<Владельцы> владельцы_list = Entities.GetContext().Владельцы.Where(p => p.Логин == loginTextBox.Text && p.Пароль == passwordTextBox.Password);
                    if (владельцы_list.Count() == 1)
                    {
                        MessageBox.Show("Добро пожаловать, " + владельцы_list.First().Имя);
                    Window1 window = new Window1(владельцы_list.First());
                    window.Owner = this;
                    window.Show();
                    this.Hide();
                }
                else MessageBox.Show("Неверный пароль или логин!");
                }
            }
        }
    }

}



для бд

    public partial class Entities : DbContext
    {
        private static Entities _context;
        public Entities()
            : base("name=Entities")
        {
        }
        public static Entities GetContext()
        {
            if (_context == null)
                _context = new Entities();
            return _context;
        }
        
        
        
        
        
        
        <Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="499.621" Style="{StaticResource windowStyle}"> 
    <Grid Margin="0,0,2,0">

        <Label x:Name="zag_autho" FontSize="25" Content="Вход в систему" HorizontalAlignment="Center" Margin="0,88,0,0" VerticalAlignment="Top" FontFamily="Cambria"/>
        <TextBox x:Name="loginTextBox" HorizontalAlignment="Left" Height="30" Margin="165,155,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="156" />
        <PasswordBox  x:Name="password"  HorizontalAlignment = " Center "  Margin = "165,205,169,0"  VerticalAlignment = " Top "  Width = " 156 "  Height = "30" />
        <Button  x:Name="butto_auth"  Content = " Войти  "  HorizontalAlignment = " Center "  Margin = "182,272,188,0"  VerticalAlignment = " Top "  Width = " 110 "  Height = " 29 "  Click = " Button_auth_Click " FontFamily="Cambria" FontSize="16" />
       
    </Grid>

</Window>








    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Themes/Dictionary1.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>





    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FF8C00"></Setter>
        <Setter Property="BorderBrush" Value="#0000"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        
    </Style>
    <Style TargetType="{x:Type Window}" x:Key="windowStyle">
        <Setter Property="Background" Value="#DCDCDC"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
    </Style>
</ResourceDictionary>




Класс
namespace WpfApp1
{
    class Class1 : IValueConverter
    {
        

        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            return (DateTime)value < DateTime.Now ?
                new SolidColorBrush(Colors.Orange) :
                new SolidColorBrush(Colors.White);
        }

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }
        
        
        окно 1
            public partial class Window1 : Window
    {
        private Dispetsher dispetsher;
        public Window1(Dispetsher dispetsher)
        {
            InitializeComponent();
            this.dispetsher = dispetsher;
            famili_label.Content = dispetsher.Name;
            name_label.Content = dispetsher.Surname;
            var massiv = from zakaz in Entities.GetContext().Zakazi
                         join client in Entities.GetContext().Klient on zakaz.ID_kli equals client.ID_kli
                         join driv in Entities.GetContext().Driver on zakaz.ID_dri equals driv.ID_dri
                         select new
                         {

                             date = zakaz.Data_prin_zak,
                             name = client.Name.ToString() + " " + client.Surname + " " + client.Patronymic,
                             valy = zakaz.Volume.ToString() + " тон",
                             sum = zakaz.Sum.ToString() + "руб.",
                             vodila = driv.Name.ToString() + " " + driv.Surname,
                             statys =zakaz.Status,
                             za = zakaz.ID
                         };
            dataGrid.ItemsSource = massiv.ToList();
        
        }

        
        private void Exit_button_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
        private void Window_Clossing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            this.Owner.Show();
        }

        private void Label_MouseDoubleClocked(object sender, MouseButtonEventArgs e)
        {
            Label label = sender as Label;
            Info info = new Info(label.Tag);
            info.Owner = this;
            info.Show();
        }
    }
    
    
    
    
    
 ДИКШИОнАРИ   
    
        <local1:Class1 x:Key="conventer"></local1:Class1>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FF8C00"></Setter>
        <Setter Property="BorderBrush" Value="#0000"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        
    </Style>
    <Style TargetType="{x:Type Window}" x:Key="windowStyle">
        <Setter Property="Background" Value="#DCDCDC"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
    </Style>
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="{Binding date, Converter={StaticResource conventer}}"></Setter>
    </Style>
</ResourceDictionary>






Окно1

<Grid Margin="0,0,0,5">
        <Image x:Name="Image_profiel" Source="Y:\Student\18ИП1,2\УП.07\2 подгруппа\Кязимова\unnamed.jpg" HorizontalAlignment="Left" Height="100" Margin="32,10,0,0" VerticalAlignment="Top" Width="100"/>
        <Label x:Name="famili_label" Content="Фамилия" HorizontalAlignment="Left" Margin="137,10,0,0" VerticalAlignment="Top"/>
        <Label x:Name="name_label" Content="Имя" HorizontalAlignment="Left" Margin="137,41,0,0" VerticalAlignment="Top"/>
        <Button x:Name="exit_button" Content="Выйти" HorizontalAlignment="Left" Margin="137,81,0,0" VerticalAlignment="Top" Width="108" Click="Exit_button_Click" Height="29"/>
        <DataGrid AutoGenerateColumns="false" x:Name="dataGrid" HorizontalAlignment="Left" Height="207" Margin="10,176,0,0" VerticalAlignment="Top" Width="920" >
            <DataGrid.Columns>

                <DataGridTemplateColumn Header="№ заявки">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Tag="{Binding za}" MouseDoubleClick="Label_MouseDoubleClocked" Content="{Binding zaName}"></Label>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Дата принятия заказа" Binding="{Binding date}"></DataGridTextColumn>
                <DataGridTextColumn Header="Объем заказа" Binding="{Binding valy}"></DataGridTextColumn>
                <DataGridTextColumn Header="Заказчи" Binding="{Binding name}"></DataGridTextColumn>
                <DataGridTextColumn Header="Статус" Binding="{Binding statys}"></DataGridTextColumn>
                <DataGridTextColumn Header="Водитель" Binding="{Binding vodila}"></DataGridTextColumn>
                <DataGridTextColumn Header="Сумма заказа" Binding="{Binding sum}"></DataGridTextColumn>
                <DataGridTemplateColumn Width ="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button  Content="Редактировать"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
