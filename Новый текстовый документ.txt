авторизация

 <Grid>
        <Label x:Name="zag_autho" FontSize="20" Content="Авторизация в системе" HorizontalAlignment="Center" Margin="0,88,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="loginTextBox" HorizontalAlignment="Left" Height="35" Margin="86,144,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="156"/>
        <PasswordBox x:Name="passwordTextBox" HorizontalAlignment="Center" Margin="86,200,102,0" VerticalAlignment="Top" Width="156" Height="35"/>
        <Button x:Name="butto_auth" Content="Войти в систему" HorizontalAlignment="Center" Margin="108,278,107,0" VerticalAlignment="Top" Width="110" Height="29" Click="Button_auth_Click"/>
    </Grid>

авториз прогр

 public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

        private void Button_auth_Click(object sender, RoutedEventArgs e)
        {
            if (!String.IsNullOrEmpty(loginTextBox.Text))
            {
                if (!String.IsNullOrEmpty(passwordTextBox.Password))
                {
                    IQueryable<Владельцы> владельцы_list = Entities.GetContext().Владельцы.Where(p => p.Логин == loginTextBox.Text && p.Пароль == passwordTextBox.Password);
                    if (владельцы_list.Count() == 1)
                    {
                        MessageBox.Show("Добро пожаловать, " + владельцы_list.First().Имя);
                    Window1 window = new Window1(владельцы_list.First());
                    window.Owner = this;
                    window.Show();
                    this.Hide();
                }
                else MessageBox.Show("Неверный пароль или логин!");
                }
            }
        }
    }

}



для бд

    public partial class Entities : DbContext
    {
        private static Entities _context;
        public Entities()
            : base("name=Entities")
        {
        }
        public static Entities GetContext()
        {
            if (_context == null)
                _context = new Entities();
            return _context;
        }
        
        
        
        
        
        
        <Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="499.621" Style="{StaticResource windowStyle}"> 
    <Grid Margin="0,0,2,0">

        <Label x:Name="zag_autho" FontSize="25" Content="Вход в систему" HorizontalAlignment="Center" Margin="0,88,0,0" VerticalAlignment="Top" FontFamily="Cambria"/>
        <TextBox x:Name="loginTextBox" HorizontalAlignment="Left" Height="30" Margin="165,155,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="156" />
        <PasswordBox  x:Name="password"  HorizontalAlignment = " Center "  Margin = "165,205,169,0"  VerticalAlignment = " Top "  Width = " 156 "  Height = "30" />
        <Button  x:Name="butto_auth"  Content = " Войти  "  HorizontalAlignment = " Center "  Margin = "182,272,188,0"  VerticalAlignment = " Top "  Width = " 110 "  Height = " 29 "  Click = " Button_auth_Click " FontFamily="Cambria" FontSize="16" />
       
    </Grid>

</Window>








    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Themes/Dictionary1.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>





    <Style TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FF8C00"></Setter>
        <Setter Property="BorderBrush" Value="#0000"></Setter>
        <Setter Property="MinWidth" Value="120"></Setter>
        <Setter Property="Height" Value="40"></Setter>
        
    </Style>
    <Style TargetType="{x:Type Window}" x:Key="windowStyle">
        <Setter Property="Background" Value="#DCDCDC"></Setter>
        <Setter Property="FontFamily" Value="Segoe UI"></Setter>
    </Style>
</ResourceDictionary>


окно
 <Grid>
        <Image x:Name="Image_profiel" Source="Y:\Student\18ИП1,2\ПМ.02 УП.02\Кязимова\11ПР\local_image\IMG.jpg" HorizontalAlignment="Left" Height="100" Margin="563,10,0,0" VerticalAlignment="Top" Width="100"/>
        <Label x:Name="famili_label" Content="Фамилия" HorizontalAlignment="Left" Margin="668,10,0,0" VerticalAlignment="Top"/>
        <Label x:Name="name_label" Content="Имя" HorizontalAlignment="Left" Margin="668,41,0,0" VerticalAlignment="Top"/>
        <Button x:Name="exit_button" Content="Выйти" HorizontalAlignment="Left" Margin="684,72,0,0" VerticalAlignment="Top" Width="75" Click="Exit_button_Click"/>
    </Grid>
    
    
    
    код окна 
     public partial class Window1 : Window
    {
        private Владельцы владельцы;
        public Window1(Владельцы владельцы)
        {
            InitializeComponent();
            this.владельцы = владельцы;
            famili_label.Content = владельцы.Фамилия;
            name_label.Content = владельцы.Имя;
            if (!String.IsNullOrEmpty(владельцы.картинка))
            {
                try
                {
                    Image_profiel.Source = new BitmapImage(new Uri(System.IO.Path.GetFullPath("image/" + владельцы.картинка)));
                }
                catch(InvalidOperationException ex)
                {
                    MessageBox.Show(ex.Message);
                }
            }
        }

        private void Exit_button_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
        private void Window_Clossing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            this.Owner.Show();
        }
    }
    
    
    
    
    ред
     <Grid>
        <Image x:Name="image_shop" Source="local_image/no_image.png" HorizontalAlignment="Left" Height="132" Margin="10,10,0,0" VerticalAlignment="Top" Width="132"/>
        <TextBlock x:Name="name_shops_textBlock" HorizontalAlignment="Left" Height="34" Margin="147,10,0,0" TextWrapping="Wrap" Text="Название магазина" VerticalAlignment="Top" Width="222" FontWeight="Bold"/>
        <TextBlock x:Name="id_shop_texrBlock" Text="код магазина- " HorizontalAlignment="Left" Margin="147,48,0,0" VerticalAlignment="Top" Foreground="Aqua"/>
    </Grid>
    
    
    
    
    
    
    
    
    
    
    
    <Window x:Class="WpfApp1.Window1"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="Window1" Height="401" Width="800">
    <Grid>
        <Image x:Name="Image_profiel" Source="Y:\Student\18ИП1,2\УП.07\2 подгруппа\Кязимова\unnamed.jpg" HorizontalAlignment="Left" Height="100" Margin="32,10,0,0" VerticalAlignment="Top" Width="100"/>
        <Label x:Name="famili_label" Content="Фамилия" HorizontalAlignment="Left" Margin="137,10,0,0" VerticalAlignment="Top"/>
        <Label x:Name="name_label" Content="Имя" HorizontalAlignment="Left" Margin="137,41,0,0" VerticalAlignment="Top"/>
        <Button x:Name="exit_button" Content="Выйти" HorizontalAlignment="Left" Margin="137,81,0,0" VerticalAlignment="Top" Width="108" Click="Exit_button_Click" Height="29"/>
        <DataGrid AutoGenerateColumns="false" x:Name="dataGridZayvka" HorizontalAlignment="Left" Height="233" Margin="10,176,0,0" VerticalAlignment="Top" Width="772">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Информация">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Tag="{Binding zvl}" MouseDoubleClick="Label_MouseDoubleClock" Content="{Binding zvlName}"></Label>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <DataGridTextColumn Header="1" Binding="{Binding Sroki}"></DataGridTextColumn>
                <DataGridTextColumn Header="Дата закрытия" Binding="{Binding zkrt}"></DataGridTextColumn>
                <DataGridTextColumn Header="Наименование" Binding="{Binding Name}"></DataGridTextColumn>
                <DataGridTextColumn Header="Заявитель" Binding="{Binding zayvitel123}"></DataGridTextColumn>
                <DataGridTemplateColumn Width ="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button  Content="Редактировать"></Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
  
    





 <Grid>
        <DataGrid x:Name="dataGridProd" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="244" Margin="72,165,0,0" VerticalAlignment="Top" Width="688">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Тип продукта" Binding="{Binding type}"/>
                <DataGridTemplateColumn Header="Наименование продукта">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Tag="{Binding prod}" MouseDoubleClick="Label_MouseDoubleClick"
                                   Content="{Binding name}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Артикул" Binding="{Binding art}"/>
                <DataGridTextColumn Header="Материалы" Binding="{Binding mater}"/>
                <DataGridTextColumn Header="Стоимость" Binding="{Binding sto}"/>
                <DataGridTemplateColumn Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button Tag="{Binding edB}" Content="Редактировать" Click="Button_Click"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Image x:Name="image" HorizontalAlignment="Left" Height="100" Margin="36,10,0,0" VerticalAlignment="Top" Width="100" Source="Resource/Images/Намордник.png"/>
        <TextBox x:Name="textBox" HorizontalAlignment="Left" Height="23" Margin="227,96,0,0" TextWrapping="Wrap" Text="Поиск" VerticalAlignment="Top" Width="248"/>
        <ComboBox x:Name="comboBox" HorizontalAlignment="Left" Margin="592,96,0,0" VerticalAlignment="Top" Width="168"/>
        <ComboBox x:Name="comboBox1" HorizontalAlignment="Left" Margin="812,97,0,0" VerticalAlignment="Top" Width="178"/>
        <Button x:Name="button" Content="Добавить" HorizontalAlignment="Left" Margin="36,588,0,0" VerticalAlignment="Top" Width="74"/>

    </Grid>








  private int pId;
        public ProductWin(object id)
        {
            InitializeComponent();

            var pId = (int)id;
            var prod = Entities.GetContext().Product.Where(p => p.ID == pId);
           Type.Text +=  prod.First().ProductType.Title;
            NameProd.Text +=  prod.First().Title;
            Art.Text += prod.First().ArticleNumber;
           Kol.Text +=  prod.First().ProductionPersonCount.ToString();
            Ceh.Text += prod.First().ProductionWorkshopNumber.ToString();
            Sum.Text += prod.First().MinCostForAgent.ToString();
            Opisan.Text +=  prod.First().Description;
        }
    }
    
    
    
    
    
    
        <Grid>
        <Image x:Name="image" HorizontalAlignment="Left" Height="160" Margin="428,119,0,0" VerticalAlignment="Top" Width="163" Source="Resource/Images/picture.png"/>
        <TextBlock x:Name="Type"  HorizontalAlignment="Left" Margin="21,60,0,0" Text="Тип продукта" TextWrapping="Wrap"  VerticalAlignment="Top"/>
        <TextBlock x:Name="NameProd"  HorizontalAlignment="Left" Margin="21,100,0,0"  TextWrapping="Wrap" Text="Наименование продукта" VerticalAlignment="Top"/>
        <TextBlock x:Name="Art"  HorizontalAlignment="Left" Margin="21,140,0,0" Text="Артикул" TextWrapping="Wrap"  VerticalAlignment="Top"/>
        <TextBlock x:Name="Opisan"  HorizontalAlignment="Left" Margin="21,180,0,0" Text="Описание" TextWrapping="Wrap"  VerticalAlignment="Top"/>
        <TextBlock x:Name="Kol"  HorizontalAlignment="Left" Margin="21,220,0,0" Text="Количество" TextWrapping="Wrap"  VerticalAlignment="Top"/>
        <TextBlock x:Name="Ceh"  HorizontalAlignment="Left" Margin="21,260,0,0" Text="Номер цеха" TextWrapping="Wrap"  VerticalAlignment="Top"/>
        <TextBlock x:Name="Sum"  HorizontalAlignment="Left" Margin="21,300,0,0" Text="Минимальная стоимость" TextWrapping="Wrap"  VerticalAlignment="Top"/>
        <Label x:Name="label" Content="Информация о продукте" HorizontalAlignment="Left" Margin="216,10,0,0" VerticalAlignment="Top" Height="30" Width="213"/>
    </Grid>
</Window>






    public partial class Window1 : Window
    {
          private Dispetsher dispetsher;
        public Window1(Dispetsher dispetsher)
        {
            InitializeComponent();
            this.dispetsher = dispetsher;
            famili_label.Content = dispetsher.Name;
            name_label.Content = dispetsher.Surname;
            var massiv = from zakaz in Entities.GetContext().Zakazi
                         join client in Entities.GetContext().Klient on zakaz.ID_kli equals client.ID_kli
                         join driv in Entities.GetContext().Driver on zakaz.ID_dri equals driv.ID_dri
                         select new
                         {
                             id = zakaz.ID,
                             data = zakaz.Data_prin_zak,
                             name = client.Name.ToString() + " " + client.Surname + " " + client.Patronymic,
                             val = zakaz.Volume,
                             sum = zakaz.Sum
                         };
            dataGrid.ItemsSource = massiv.ToList();
        }
        private void Exit_button_Click(object sender, RoutedEventArgs e)
        {
            this.Close();
        }
        private void Window_Clossing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            this.Owner.Show();
        }
    }
}










    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
        }

            private void Button_auth_Click(object sender, RoutedEventArgs e)
            {
                if (!String.IsNullOrEmpty(loginTextBox.Text))
                {
                    if (!String.IsNullOrEmpty(password.Password))
                    {
                        IQueryable<Dispetsher> dispetsher_list = Entities.GetContext().Dispetsher.Where(p => p.Surname == loginTextBox.Text && p.Passvord == password.Password);
                        if (dispetsher_list.Count() == 1)
                       {
                        Window1 window = new Window1(dispetsher_list.First());
                        window.Owner = this;
                        window.Show();
                        this.Hide();
                    }
                    else MessageBox.Show("Неверный пароль или логин!");
                    }
                }



            }       
    }
}





двойной клик

<DataGridTemplateColumn Header="№ заявки">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Label Tag="{Binding mdb}" MouseDoubleClick="Label_MouseDoubleClock" Content="{Binding mdbName}"></Label>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
